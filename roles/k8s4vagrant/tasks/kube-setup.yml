- name: Add Kubernetes YUM repository
  yum_repository:
    name: kubernetes
    description: Kubernetes repository
    baseurl: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
    gpgcheck: yes
    enabled: yes
    gpgkey: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key

- name: Install Kubernetes packages
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Enable and start kubelet service
  systemd:
    name: kubelet
    enabled: yes
    state: started

- name: Check if lock file exists
  stat:
    path: /tmp/kubeadm.lock
  register: lock_file_stat

- name: Debug check if kube is init
  ansible.builtin.debug:
    msg:
    - "not running"
  when: "not lock_file_stat.stat.exists"

- name: Initialize Kubernetes if not already initialized
  command: kubeadm init
  when: inventory_hostname == "kubemaster" and 
        not lock_file_stat.stat.exists  # Check if lock file does not exist
  notify: lockfile

- name: Set up kubeconfig for vagrant user
  become: true
  shell: |
    mkdir -p /home/vagrant/.kube
    mkdir -p /root/.kube
    cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    cp -i /etc/kubernetes/admin.conf /root/.kube/config
    chown vagrant:vagrant /home/vagrant/.kube/config
  when: inventory_hostname == "kubemaster" and 
        not lock_file_stat.stat.exists  # Check if lock file does not exist

- name: Retrieve the join command for worker nodes
  command: kubeadm token create --print-join-command
  when: inventory_hostname == "kubemaster" and 
        not lock_file_stat.stat.exists  # Check if lock file does not exist
  register: join_command

- name: Debug join command
  ansible.builtin.debug:
    msg:
    - "join command : {{ join_command.stdout }}"
  when: inventory_hostname == "kubemaster" and 
        not lock_file_stat.stat.exists  # Check if lock file does not exist

- name: Join worker nodes to the Kubernetes cluster
  command: "{{ join_command.stdout }}"
  when: inventory_hostname != "kubemaster" and
        not lock_file_stat.stat.exists 