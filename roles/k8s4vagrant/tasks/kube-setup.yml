- name: Add Kubernetes YUM repository
  yum_repository:
    name: kubernetes
    description: Kubernetes repository
    baseurl: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
    gpgcheck: yes
    enabled: yes
    gpgkey: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key

- name: Install Kubernetes packages
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Enable and start kubelet service
  systemd:
    name: kubelet
    enabled: yes
    state: started

- name: Check if lock file exists
  stat:
    path: /tmp/kubeadm.lock
  register: lock_file_stat

- name: Initialize Kubernetes if not already initialized
  command: kubeadm init
  when: inventory_hostname == "kubemaster" and not lock_file_stat.stat.exists
  notify: lockfile

- name: Set up kubeconfig for vagrant user
  become: true
  shell: |
    mkdir -p /home/vagrant/.kube
    mkdir -p /root/.kube
    cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    cp -i /etc/kubernetes/admin.conf /root/.kube/config
    chown vagrant:vagrant /home/vagrant/.kube/config
  when: inventory_hostname == "kubemaster" and not lock_file_stat.stat.exists

- name: Retrieve the join command for worker nodes
  command: kubeadm token create --print-join-command
  when: inventory_hostname == "kubemaster"
  register: join_command

- name: Set join command fact
  set_fact:
    join_command_str: "{{ join_command.stdout }}"
  when: inventory_hostname == "kubemaster" and not lock_file_stat.stat.exists

- name: Join worker nodes to the Kubernetes cluster
  command: "{{ hostvars['kubemaster'].join_command_str }}"
  when: inventory_hostname != "kubemaster" and not lock_file_stat.stat.exists

- name: Ensure containerd CNI configuration exists in config.toml
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*\[plugins."io.containerd.grpc.v1.cri".cni\]'
    line: |
      [plugins."io.containerd.grpc.v1.cri".cni]
        bin_dir = "/opt/cni/bin"
        conf_dir = "/etc/cni/net.d"
    state: present

# Install Calico on all nodes
- name: Install Calico CNI plugin
  become: true
  command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  when: inventory_hostname == "kubemaster" and not lock_file_stat.stat.exists
  notify:
  - Restart containerd
  - Restart kubelet

# - name: Wait for Calico pods to be ready
#   become: true
#   command: kubectl rollout status daemonset/calico-node -n kube-system
#   when: inventory_hostname == "kubemaster"
#   retries: 5
#   delay: 30
#   until: result.rc == 0
#   register: result
#   notify:
#     - Restart containerd
#     - Restart kubelet

