- name: Clear YUM cache
  command: yum clean all

- name: Install dependencies
  yum:
    name:
      - yum-utils
      - ca-certificates
      - curl
      - socat
    state: present
    update_cache: yes

- name: Enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    reload: yes

- name: Open required firewall ports
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - "6443/tcp"
    - "10250/tcp"
    - "8080/tcp"

- name: Reload firewalld to apply changes
  command: firewall-cmd --reload

- name: Load overlay module
  ansible.builtin.shell: modprobe overlay
  become: true
  ignore_errors: true

- name: Load br_netfilter module
  ansible.builtin.shell: modprobe br_netfilter
  become: true
  ignore_errors: true

- name: Ensure overlay and br_netfilter modules are loaded on boot
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s-modules.conf
    content: |
      overlay
      br_netfilter
  become: true

- name: Apply sysctl settings for Kubernetes
  ansible.builtin.sysctl:
    name: "{{ item }}"
    value: 1
    state: present
    reload: yes
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Disable swap
  command: swapoff -a
  become: true

- name: Remove swap entry from fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^/swap'
    state: absent

- name: Add Docker repository
  yum_repository:
    name: docker-ce
    description: Docker Community Edition
    baseurl: https://download.docker.com/linux/centos/9/x86_64/stable/
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
    enabled: yes

- name: Install containerd
  yum:
    name: containerd.io
    state: present
    update_cache: yes

- name: Configure containerd to enable CRI plugin
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^disabled_plugins'
    line: '#disabled_plugins = []'
  notify: Restart containerd

- name: Set SystemdCgroup to true in containerd config
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^SystemdCgroup = false'
    line: 'SystemdCgroup = true'
    state: present

  notify: Restart containerd
- name: Ensure containerd service is started
  systemd:
    name: containerd
    enabled: yes
    state: started
