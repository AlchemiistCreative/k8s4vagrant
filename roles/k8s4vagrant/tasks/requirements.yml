- name: Clear YUM cache
  command: yum clean all


- name: Install dependencies
  yum:
    name:
      - yum-utils
      - ca-certificates
      - curl
      - socat
    state: present
    update_cache: yes

- name: Put SELinux in permissive mode, logging actions that would be blocked.
  ansible.posix.selinux:
    policy: targeted
    state: permissive
- name: Stop firewalld
  systemd:
    name: firewalld
    state: stopped

- name: Disable firewalld
  systemd:
    name: firewalld
    enabled: no

- name: Mask firewalld (optional, to ensure it can't be started)
  systemd:
    name: firewalld
    masked: yes

- name: Enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present
    reload: yes

- name: iptables rules for Master node
  iptables:
    chain: INPUT
    protocol: "{{ item.proto }}"
    destination_port: "{{ item.port }}"
    jump: ACCEPT
  with_items:
    - { port: "6443", proto: "tcp" }  # Kubernetes API server
    - { port: "2379:2380", proto: "tcp" }  # etcd server client API
    - { port: "10250", proto: "tcp" }  # Kubelet API
    - { port: "10251", proto: "tcp" }  # kube-scheduler
    - { port: "10252", proto: "tcp" }  # kube-controller-manager
    - { port: "8285", proto: "udp" }  # Flannel (UDP encapsulation)
    - { port: "8472", proto: "udp" }  # Flannel (VXLAN)
    - { port: "30000:32767", proto: "tcp" }  # NodePort range
    - { port: "4789", proto: "udp" }  # VXLAN overlay for Flannel
    - { port: "6444", proto: "tcp" }  # Optional API services
  when: inventory_hostname == "kubemaster"


- name: iptables rules for Worker nodes
  iptables:
    chain: INPUT
    protocol: "{{ item.proto }}"
    destination_port: "{{ item.port }}"
    jump: ACCEPT
  with_items:
    - { port: "10250", proto: "tcp" }  # Kubelet API
    - { port: "8285", proto: "udp" }  # Flannel (UDP encapsulation)
    - { port: "8472", proto: "udp" }  # Flannel (VXLAN)
    - { port: "30000:32767", proto: "tcp" }  # NodePort range
    - { port: "4789", proto: "udp" }  # VXLAN overlay for Flannel
  when: inventory_hostname != "kubemaster"


- name: Add masquerading rule to iptables
  iptables:
    table: nat
    chain: POSTROUTING
    jump: MASQUERADE

- name: Add netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Creating a file with content
  copy:
    dest: "/etc/modprobe.d/br_netfilter.conf"
    content: |
      br_netfilter

- name: Apply sysctl settings for Kubernetes
  ansible.builtin.sysctl:
    name: "{{ item }}"
    value: 1
    state: present
    reload: yes
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Disable swap
  command: swapoff -a
  become: true

- name: Comment out the swap entry in /etc/fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^/dev/mapper/rl_rocky9-swap'
    state: absent  # To remove the line completely

- name: Add Docker repository
  yum_repository:
    name: docker-ce
    description: Docker Community Edition
    baseurl: https://download.docker.com/linux/centos/9/x86_64/stable/
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
    enabled: yes

- name: Install containerd
  yum:
    name: containerd.io
    state: present
    update_cache: yes

- name: Setup containerd
  shell:
    cmd: |
      containerd config default > /etc/containerd/config.toml
      sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
  notify: Restart containerd

- name: Ensure containerd service is started
  systemd:
    name: containerd
    enabled: yes
    state: started
