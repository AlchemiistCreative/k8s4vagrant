- name: Clear YUM cache
  command: yum clean all

- name: Install dependencies
  yum:
    name:
      - yum-utils
      - ca-certificates
      - curl
      - socat  # Install socat if needed
    state: present
    update_cache: yes

- name: Add Docker repository
  yum_repository:
    name: docker-ce
    description: Docker Community Edition
    baseurl: https://download.docker.com/linux/centos/9/x86_64/stable/
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
    enabled: yes

- name: Install containerd
  yum:
    name: containerd.io
    state: present
    update_cache: yes

- name: Enable and start containerd service
  systemd:
    name: containerd
    enabled: yes
    state: started

- name: Enable IP forwarding
  command: sysctl -w net.ipv4.ip_forward=1
  register: ip_forward
  changed_when: ip_forward.rc == 0

- name: Make IP forwarding persistent
  lineinfile:
    path: /etc/sysctl.conf
    line: "net.ipv4.ip_forward = 1"
    state: present

- name: Reload sysctl settings
  command: sysctl -p

- name: Open required firewall ports
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - "6443/tcp"
    - "10250/tcp"
    - "8080/tcp"

- name: Reload firewalld to apply changes
  command: firewall-cmd --reload

- name: Add Kubernetes YUM repository
  yum_repository:
    name: kubernetes
    description: Kubernetes repository
    baseurl: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
    enabled: yes
    gpgcheck: yes
    gpgkey: https://pkgs.k8s.io/core:/stable:/v130/rpm/repodata/repomd.xml.key

- name: Load overlay module
  ansible.builtin.shell: modprobe overlay
  become: true
  ignore_errors: true

- name: Load br_netfilter module
  ansible.builtin.shell: modprobe br_netfilter
  become: true
  ignore_errors: true

- name: Ensure overlay module is loaded on boot
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s-modules.conf
    content: |
      overlay
      br_netfilter
  become: true

- name: Configure sysctl for Kubernetes
  ansible.builtin.copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
  become: true

- name: Apply sysctl settings
  ansible.builtin.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present
    reload: yes

- name: Apply sysctl settings
  ansible.builtin.sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    state: present
    reload: yes

- name: Install Kubernetes packages
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Disable swap
  command: swapoff -a

- name: Remove swap entry from fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^/swap'  # Adjust this regex to match your swap entry
    state: absent

- name: Ensure swap is off
  command: swapoff -a

- name: Enable and start kubelet service
  systemd:
    name: kubelet
    enabled: yes
    state: started

- name: Initialize Kubernetes cluster on master
  command: kubeadm init
  when: inventory_hostname == "kubemaster"

- name: Set up kubeconfig for vagrant user
  become: true
  shell: |
    mkdir -p /home/vagrant/.kube
    cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    chown vagrant:vagrant /home/vagrant/.kube/config
  when: inventory_hostname == "kubemaster"

- name: Ensure the CA certificate is present
  copy:
    src: /etc/kubernetes/pki/ca.crt
    dest: /etc/kubernetes/pki/ca.crt
  when: inventory_hostname == "kubemaster"
